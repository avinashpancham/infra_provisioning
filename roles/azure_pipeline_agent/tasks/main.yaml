---
- name: Check required variables and settings
  block:
    - name: Check required variables
      fail:
        msg: 'Variable {{ item }} is not defined'
      when: item not in vars
      loop: '{{ required_vars }}'
    - name: Check for user
      block:
        - name: Retrieve user information from database
          getent:
            database: passwd
            key: '{{ user }}'
            fail_key: false
        - name: Create user
          include_role:
            name: custom_sudo_user
          when: not getent_passwd[user]
    - name: Check for variable agent_version
      block:
        - name: Get latest Azure pipeline agent version
          uri:
            url: "https://api.github.com/\
              repos/microsoft/azure-pipelines-agent/\
              releases/latest"
            return_content: yes
          register: response
          failed_when: '"name" not in response.content'
        - name: Set agent_version variable
          set_fact:
            agent_version: '{{ (response.content|from_json).name[1:] }}'
      when: agent_version is not defined
    - name: Check for variable pool
      set_fact:
        pool: 'Default'
      when: pool is not defined
- name: Install dependencies
  block:
    - name: Install aptitude
      package: name=aptitude state=latest update_cache=yes force_apt_get=yes
    - name: Install dependencies from apt
      package: name={{ item }} state=present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - python3-pip
        - software-properties-common
    - name: Install Azure CLI
      pip:
        name: azure-cli
        executable: pip3
        state: present
- name: Download, install and configure Azure pipeline agent software
  block:
    - name: Create Ansible tmp directory
      become_user: '{{ user }}'
      ansible.builtin.file:
        path: /home/{{ user }}/.ansible/tmp
        state: directory
        mode: 0700
    - name: Download and extract Azure DevOps agent software
      become_user: '{{ user }}'
      ansible.builtin.unarchive:
        remote_src: yes
        src: "https://vstsagentpackage.azureedge.net/\
          agent/{{ agent_version }}/\
          vsts-agent-linux-x64-{{ agent_version }}.tar.gz"
        dest: /home/{{ user }}
        creates: /home/{{ user }}/config.sh
    - name: Configure Azure DevOps agent
      become_user: '{{ user }}'
      command: >
        ./config.sh
        --unattended
        --acceptTeeEula
        --url={{ ado_url }}
        --auth pat
        --token={{ ado_token }}
        --pool={{ pool }}
        --replace
      args:
        chdir: /home/{{ user }}
        creates: .agent
    - name: Install Azure DevOps agent
      become_user: '{{ user }}'
      command: >
        sudo
        ./svc.sh
        install
      args:
        chdir: /home/{{ user }}
        creates: .service
    - name: Get Azure DevOps agent systemd name
      command: cat /home/{{ user }}/.service
      register: azure_devops_service
      changed_when: false
    - name: Run Azure DevOps agent service
      ansible.builtin.systemd:
        name: '{{ azure_devops_service.stdout }}'
        state: started
